{
  "threads": {
    "48874": {
      "threadId": "48874",
      "iterations": [
        {
          "iteration": "0",
          "timeStamp": "1656043593939",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "1",
          "timeStamp": "1656043594544",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "2",
          "timeStamp": "1656043595142",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "3",
          "timeStamp": "1656043595748",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "4",
          "timeStamp": "1656043596345",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "5",
          "timeStamp": "1656043596950",
          "threadId": "48874",
          "threadName": "conn3",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 48874:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        }
      ]
    },
    "50552": {
      "threadId": "50552",
      "iterations": [
        {
          "iteration": "0",
          "timeStamp": "1656043594052",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "1",
          "timeStamp": "1656043594658",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "2",
          "timeStamp": "1656043595258",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "3",
          "timeStamp": "1656043595861",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "4",
          "timeStamp": "1656043596459",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        },
        {
          "iteration": "5",
          "timeStamp": "1656043597062",
          "threadId": "50552",
          "threadName": "conn4",
          "threadState": "S",
          "threadCPU": "0.0",
          "threadStack": "TID 50552:\n#0  0x00007fee95f4e9ef recvmsg\n#1  0x000056269b6a9522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x000056269b6a95d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x000056269b1e8073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x000056269b1f61aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x000056269b1df6b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x000056269b1dfa0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x000056269911200d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000562699113e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x000056269911422f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x000056269b1af9c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005626997f3ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x000056269b1afb7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x000056269b1b3a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x000056269b1b3a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fee95ebbb43 start_thread\n#16 0x00007fee95f4da00 __clone3",
          "analysis": {
            "queryState": "Idle"
          }
        }
      ]
    }
  },
  "numCalls": "6"
}
