
Process ID of mongod is: 5112



1655467817227
PID 5112 - process
TID 5112:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf6752a7a7 mongo::waitForShutdown()
#4  0x000055cf64bb84e1 mongo::(anonymous namespace)::_initAndListen(mongo::ServiceContext*, int) [clone .isra.1896]
#5  0x000055cf64bb9eff mongo::mongod_main(int, char**)
#6  0x000055cf64a54aae main
#7  0x00007f8394d83d90 __libc_start_call_main
    ../sysdeps/nptl/libc_start_call_main.h:58:16
#8  0x00007f8394d83e40 __libc_start_main@@GLIBC_2.34
    ../csu/libc-start.c:392:3
#9  0x000055cf64bb43fe _start
TID 5114:
#0  0x00007f8394d9d21a __sigtimedwait
    ../sysdeps/unix/sysv/linux/sigtimedwait.c:61:28
#1  0x000055cf6588b230 mongo::(anonymous namespace)::signalProcessingThread(mongo::LogFileStatus)
#2  0x000055cf6588bce5 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (*)(mongo::LogFileStatus), mongo::LogFileStatus&, 0>(void (*)(mongo::LogFileStatus), mongo::LogFileStatus&)::{lambda()#1}> > >::_M_run()
#3  0x000055cf676d945f execute_native_thread_routine
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5115:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf6738ccff std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1}, , 0>(mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5116:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5117:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5118:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5121:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64ccf03b __tiered_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5131:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cc6f10 __log_file_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5132:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cc8883 __log_wrlsn_server
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5133:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64cc7572 __log_server
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5134:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5135:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5136:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5137:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5138:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cccce2 __sweep_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5139:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64c7b77b mongo::WiredTigerKVEngine::WiredTigerSessionSweeper::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5143:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5155:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65bbcdcf mongo::JournalFlusher::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5156:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65b78b6a mongo::Checkpointer::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5157:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf664a93fc mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::deadlineMonitorThread()
#3  0x000055cf664a5a91 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*, 0>(void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*&&)::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5161:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf650aca54 mongo::FTDCController::doLoop()
#3  0x000055cf650ad17c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FTDCController::start()::{lambda()#2}, , 0>(mongo::FTDCController::start()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5162:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf671dbd2b asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cc4a77 mongo::executor::NetworkInterfaceTL::_run()
#7  0x000055cf66cc4d66 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1}, , 0>(mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#8  0x000055cf676d945f execute_native_thread_routine
#9  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#10 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5163:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5164:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65085e7a mongo::FreeMonMessageQueue::dequeue(mongo::ClockSource*)
#3  0x000055cf650827be mongo::FreeMonProcessor::run()
#4  0x000055cf6508d6c3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1}, , 0>(mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5165:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64fb58aa mongo::TTLMonitor::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5166:
#0  0x00007f8394e3f868 clock_nanosleep@GLIBC_2.2.5
    ../sysdeps/unix/sysv/linux/clock_nanosleep.c:78:7
#1  0x00007f8394e446e7 __nanosleep
    ../sysdeps/unix/sysv/linux/nanosleep.c:25:13
#2  0x000055cf6754b287 mongo::sleepsecs(int)
#3  0x000055cf65c1efc6 mongo::(anonymous namespace)::ClientCursorMonitor::run()
#4  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#5  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5167:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf672eb7fa mongo::(anonymous namespace)::PeriodicTaskRunner::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5168:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf65f8b3b3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1}, , 0>(mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5169:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5170:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5171:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5172:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cda88d mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}>(mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}&&)::SpecificImpl::call(mongo::Status&&)
#7  0x000055cf672f03f5 mongo::ThreadPool::Impl::_doOneTask(std::unique_lock<mongo::latch_detail::Latch>*)
#8  0x000055cf672f1a8b mongo::ThreadPool::Impl::_consumeTasks()
#9  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#10 0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#11 0x000055cf676d945f execute_native_thread_routine
#12 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#13 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5173:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf60ec mongo::transport::TransportLayerASIO::_runListener()
#6  0x000055cf66cf66cc std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::transport::TransportLayerASIO::start()::{lambda()#1}, , 0>(mongo::transport::TransportLayerASIO::start()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#7  0x000055cf676d945f execute_native_thread_routine
#8  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#9  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5185:
#0  0x000055cf65c34736 mongo::CollectionScan::doWork(unsigned long*)
#1  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#2  0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#3  0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#4  0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#5  0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#6  0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#7  0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#8  0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#9  0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#10 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#11 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#12 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#13 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#14 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#15 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#16 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#17 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#18 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#19 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#20 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#21 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#22 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#23 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#24 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#25 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#26 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#27 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#28 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#29 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#30 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#31 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#32 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#33 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#34 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#35 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#36 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#37 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 38857:
#0  0x00007f8394e819ef recvmsg
    ../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81)


1655467819242
PID 5112 - process
TID 5112:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf6752a7a7 mongo::waitForShutdown()
#4  0x000055cf64bb84e1 mongo::(anonymous namespace)::_initAndListen(mongo::ServiceContext*, int) [clone .isra.1896]
#5  0x000055cf64bb9eff mongo::mongod_main(int, char**)
#6  0x000055cf64a54aae main
#7  0x00007f8394d83d90 __libc_start_call_main
    ../sysdeps/nptl/libc_start_call_main.h:58:16
#8  0x00007f8394d83e40 __libc_start_main@@GLIBC_2.34
    ../csu/libc-start.c:392:3
#9  0x000055cf64bb43fe _start
TID 5114:
#0  0x00007f8394d9d21a __sigtimedwait
    ../sysdeps/unix/sysv/linux/sigtimedwait.c:61:28
#1  0x000055cf6588b230 mongo::(anonymous namespace)::signalProcessingThread(mongo::LogFileStatus)
#2  0x000055cf6588bce5 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (*)(mongo::LogFileStatus), mongo::LogFileStatus&, 0>(void (*)(mongo::LogFileStatus), mongo::LogFileStatus&)::{lambda()#1}> > >::_M_run()
#3  0x000055cf676d945f execute_native_thread_routine
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5115:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6738cdf7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1}, , 0>(mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5116:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5117:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5118:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5121:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64ccf03b __tiered_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5131:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cc6f10 __log_file_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5132:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cc8883 __log_wrlsn_server
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5133:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64cc7572 __log_server
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5134:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5135:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5136:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5137:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5138:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cccce2 __sweep_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5139:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64c7b77b mongo::WiredTigerKVEngine::WiredTigerSessionSweeper::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5143:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5155:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65bbcdcf mongo::JournalFlusher::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5156:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65b78b6a mongo::Checkpointer::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5157:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf664a93fc mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::deadlineMonitorThread()
#3  0x000055cf664a5a91 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*, 0>(void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*&&)::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5161:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf650aca54 mongo::FTDCController::doLoop()
#3  0x000055cf650ad17c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FTDCController::start()::{lambda()#2}, , 0>(mongo::FTDCController::start()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5162:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf671dbd2b asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cc4a77 mongo::executor::NetworkInterfaceTL::_run()
#7  0x000055cf66cc4d66 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1}, , 0>(mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#8  0x000055cf676d945f execute_native_thread_routine
#9  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#10 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5163:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5164:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65085e7a mongo::FreeMonMessageQueue::dequeue(mongo::ClockSource*)
#3  0x000055cf650827be mongo::FreeMonProcessor::run()
#4  0x000055cf6508d6c3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1}, , 0>(mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5165:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64fb58aa mongo::TTLMonitor::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5166:
#0  0x00007f8394e3f868 clock_nanosleep@GLIBC_2.2.5
    ../sysdeps/unix/sysv/linux/clock_nanosleep.c:78:7
#1  0x00007f8394e446e7 __nanosleep
    ../sysdeps/unix/sysv/linux/nanosleep.c:25:13
#2  0x000055cf6754b287 mongo::sleepsecs(int)
#3  0x000055cf65c1efc6 mongo::(anonymous namespace)::ClientCursorMonitor::run()
#4  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#5  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5167:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf672eb7fa mongo::(anonymous namespace)::PeriodicTaskRunner::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5168:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf65f8b3b3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1}, , 0>(mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5169:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5170:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5171:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5172:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cda88d mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}>(mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}&&)::SpecificImpl::call(mongo::Status&&)
#7  0x000055cf672f03f5 mongo::ThreadPool::Impl::_doOneTask(std::unique_lock<mongo::latch_detail::Latch>*)
#8  0x000055cf672f1a8b mongo::ThreadPool::Impl::_consumeTasks()
#9  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#10 0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#11 0x000055cf676d945f execute_native_thread_routine
#12 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#13 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5173:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf60ec mongo::transport::TransportLayerASIO::_runListener()
#6  0x000055cf66cf66cc std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::transport::TransportLayerASIO::start()::{lambda()#1}, , 0>(mongo::transport::TransportLayerASIO::start()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#7  0x000055cf676d945f execute_native_thread_routine
#8  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#9  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5185:
#0  0x000055cf67570f54 pcre_exec
#1  0x000055cf6758ae18 pcrecpp::RE::TryMatch(pcrecpp::StringPiece const&, int, pcrecpp::RE::Anchor, bool, int*, int) const
#2  0x000055cf6758ae9a pcrecpp::RE::DoMatchImpl(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int, int*, int) const
#3  0x000055cf6758b43f pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
#4  0x000055cf663c9e53 mongo::RegexMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#5  0x000055cf663c9f37 mongo::InMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#6  0x000055cf65c46304 mongo::PathMatchExpression::matches(mongo::MatchableDocument const*, mongo::MatchDetails*) const
#7  0x000055cf65c33613 mongo::CollectionScan::returnIfMatches(mongo::WorkingSetMember*, unsigned long, unsigned long*)
#8  0x000055cf65c348ed mongo::CollectionScan::doWork(unsigned long*)
#9  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#10 0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#11 0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#12 0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#13 0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#14 0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#15 0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#16 0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#17 0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#18 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#19 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#20 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#21 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#22 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#23 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#24 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#25 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#26 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#27 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#28 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#29 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#30 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#31 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#32 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#33 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#34 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#35 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#36 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#37 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#38 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#39 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#40 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#41 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#42 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#43 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#44 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#45 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 38857:
#0  0x00007f8394e819ef recvmsg
    ../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81)


1655467821253
PID 5112 - process
TID 5112:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf6752a7a7 mongo::waitForShutdown()
#4  0x000055cf64bb84e1 mongo::(anonymous namespace)::_initAndListen(mongo::ServiceContext*, int) [clone .isra.1896]
#5  0x000055cf64bb9eff mongo::mongod_main(int, char**)
#6  0x000055cf64a54aae main
#7  0x00007f8394d83d90 __libc_start_call_main
    ../sysdeps/nptl/libc_start_call_main.h:58:16
#8  0x00007f8394d83e40 __libc_start_main@@GLIBC_2.34
    ../csu/libc-start.c:392:3
#9  0x000055cf64bb43fe _start
TID 5114:
#0  0x00007f8394d9d21a __sigtimedwait
    ../sysdeps/unix/sysv/linux/sigtimedwait.c:61:28
#1  0x000055cf6588b230 mongo::(anonymous namespace)::signalProcessingThread(mongo::LogFileStatus)
#2  0x000055cf6588bce5 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (*)(mongo::LogFileStatus), mongo::LogFileStatus&, 0>(void (*)(mongo::LogFileStatus), mongo::LogFileStatus&)::{lambda()#1}> > >::_M_run()
#3  0x000055cf676d945f execute_native_thread_routine
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5115:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6738cdf7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1}, , 0>(mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5116:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5117:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5118:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5121:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64ccf03b __tiered_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5131:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cc6f10 __log_file_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5132:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cc8883 __log_wrlsn_server
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5133:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64cc7572 __log_server
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5134:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5135:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5136:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5137:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64d462d5 __wt_cond_auto_wait_signal
#4  0x000055cf64d46353 __wt_cond_auto_wait
#5  0x000055cf64cf330d __wt_evict_thread_run
#6  0x000055cf64d57a49 __thread_run
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5138:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64d1772a __wt_cond_wait_signal
#3  0x000055cf64cccce2 __sweep_server
#4  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#5  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5139:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64c7b77b mongo::WiredTigerKVEngine::WiredTigerSessionSweeper::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5143:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5155:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65bbcdcf mongo::JournalFlusher::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5156:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65b78b6a mongo::Checkpointer::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5157:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf664a93fc mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::deadlineMonitorThread()
#3  0x000055cf664a5a91 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*, 0>(void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*&&)::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5161:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf650aca54 mongo::FTDCController::doLoop()
#3  0x000055cf650ad17c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FTDCController::start()::{lambda()#2}, , 0>(mongo::FTDCController::start()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5162:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf671dbd2b asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cc4a77 mongo::executor::NetworkInterfaceTL::_run()
#7  0x000055cf66cc4d66 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1}, , 0>(mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#8  0x000055cf676d945f execute_native_thread_routine
#9  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#10 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5163:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf672f2766 mongo::ThreadPool::Impl::_consumeTasks()
#4  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#5  0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5164:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf65085e7a mongo::FreeMonMessageQueue::dequeue(mongo::ClockSource*)
#3  0x000055cf650827be mongo::FreeMonProcessor::run()
#4  0x000055cf6508d6c3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1}, , 0>(mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5165:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf64fb58aa mongo::TTLMonitor::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5166:
#0  0x00007f8394e3f868 clock_nanosleep@GLIBC_2.2.5
    ../sysdeps/unix/sysv/linux/clock_nanosleep.c:78:7
#1  0x00007f8394e446e7 __nanosleep
    ../sysdeps/unix/sysv/linux/nanosleep.c:25:13
#2  0x000055cf6754b287 mongo::sleepsecs(int)
#3  0x000055cf65c1efc6 mongo::(anonymous namespace)::ClientCursorMonitor::run()
#4  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#5  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#6  0x000055cf676d945f execute_native_thread_routine
#7  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#8  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5167:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf672eb7fa mongo::(anonymous namespace)::PeriodicTaskRunner::run()
#3  0x000055cf672eae96 mongo::BackgroundJob::jobBody()
#4  0x000055cf672eb36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#5  0x000055cf676d945f execute_native_thread_routine
#6  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#7  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5168:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedac1 pthread_cond_wait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf676d5b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)
#3  0x000055cf65f8b3b3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1}, , 0>(mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5169:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5170:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5171:
#0  0x00007f8394deb197 __GI___futex_abstimed_wait_cancelable64
    ./nptl/futex-internal.c:57:12
#1  0x00007f8394dedf1b pthread_cond_timedwait@@GLIBC_2.3.2
    ./nptl/pthread_cond_wait.c:503:10
#2  0x000055cf6738da17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)
#3  0x000055cf6542a9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()
#4  0x000055cf676d945f execute_native_thread_routine
#5  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#6  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5172:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf79b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()
#6  0x000055cf66cda88d mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}>(mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}&&)::SpecificImpl::call(mongo::Status&&)
#7  0x000055cf672f03f5 mongo::ThreadPool::Impl::_doOneTask(std::unique_lock<mongo::latch_detail::Latch>*)
#8  0x000055cf672f1a8b mongo::ThreadPool::Impl::_consumeTasks()
#9  0x000055cf672f2ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
#10 0x000055cf672f33b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()
#11 0x000055cf676d945f execute_native_thread_routine
#12 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#13 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5173:
#0  0x00007f8394e7ffde epoll_wait
    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10
#1  0x000055cf671d922e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)
#2  0x000055cf671dbc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)
#3  0x000055cf671dc195 asio::detail::scheduler::run(std::error_code&)
#4  0x000055cf671e3d1e asio::io_context::run()
#5  0x000055cf66cf60ec mongo::transport::TransportLayerASIO::_runListener()
#6  0x000055cf66cf66cc std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::transport::TransportLayerASIO::start()::{lambda()#1}, , 0>(mongo::transport::TransportLayerASIO::start()::{lambda()#1})::{lambda()#1}> > >::_M_run()
#7  0x000055cf676d945f execute_native_thread_routine
#8  0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#9  0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 5185:
#0  0x000055cf67570d4a pcre_exec
#1  0x000055cf6758ae18 pcrecpp::RE::TryMatch(pcrecpp::StringPiece const&, int, pcrecpp::RE::Anchor, bool, int*, int) const
#2  0x000055cf6758ae9a pcrecpp::RE::DoMatchImpl(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int, int*, int) const
#3  0x000055cf6758b43f pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
#4  0x000055cf663c9e53 mongo::RegexMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#5  0x000055cf663c9f37 mongo::InMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#6  0x000055cf65c46304 mongo::PathMatchExpression::matches(mongo::MatchableDocument const*, mongo::MatchDetails*) const
#7  0x000055cf65c33613 mongo::CollectionScan::returnIfMatches(mongo::WorkingSetMember*, unsigned long, unsigned long*)
#8  0x000055cf65c348ed mongo::CollectionScan::doWork(unsigned long*)
#9  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#10 0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#11 0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#12 0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#13 0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#14 0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#15 0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#16 0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#17 0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#18 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#19 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#20 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#21 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#22 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#23 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#24 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#25 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#26 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#27 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#28 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#29 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#30 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#31 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#32 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#33 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#34 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#35 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#36 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#37 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#38 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#39 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#40 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#41 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#42 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#43 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#44 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#45 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81
TID 38857:
#0  0x00007f8394e819ef recvmsg
    ../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
    ./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81)


5185
conn1
S R R
0.0 99.9 99.9
Printing stacks of 5185

#0  0x000055cf65c34736 mongo::CollectionScan::doWork(unsigned long*)
#1  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#2  0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#3  0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#4  0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#5  0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#6  0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#7  0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#8  0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#9  0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#10 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#11 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#12 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#13 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#14 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#15 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#16 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#17 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#18 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#19 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#20 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#21 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#22 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#23 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#24 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#25 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#26 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#27 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#28 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#29 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#30 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#31 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#32 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#33 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#34 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#35 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#36 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#37 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

#0  0x000055cf67570f54 pcre_exec
#1  0x000055cf6758ae18 pcrecpp::RE::TryMatch(pcrecpp::StringPiece const&, int, pcrecpp::RE::Anchor, bool, int*, int) const
#2  0x000055cf6758ae9a pcrecpp::RE::DoMatchImpl(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int, int*, int) const
#3  0x000055cf6758b43f pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
#4  0x000055cf663c9e53 mongo::RegexMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#5  0x000055cf663c9f37 mongo::InMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#6  0x000055cf65c46304 mongo::PathMatchExpression::matches(mongo::MatchableDocument const*, mongo::MatchDetails*) const
#7  0x000055cf65c33613 mongo::CollectionScan::returnIfMatches(mongo::WorkingSetMember*, unsigned long, unsigned long*)
#8  0x000055cf65c348ed mongo::CollectionScan::doWork(unsigned long*)
#9  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#10 0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#11 0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#12 0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#13 0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#14 0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#15 0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#16 0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#17 0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#18 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#19 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#20 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#21 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#22 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#23 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#24 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#25 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#26 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#27 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#28 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#29 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#30 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#31 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#32 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#33 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#34 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#35 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#36 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#37 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#38 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#39 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#40 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#41 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#42 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#43 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#44 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#45 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

#0  0x000055cf67570d4a pcre_exec
#1  0x000055cf6758ae18 pcrecpp::RE::TryMatch(pcrecpp::StringPiece const&, int, pcrecpp::RE::Anchor, bool, int*, int) const
#2  0x000055cf6758ae9a pcrecpp::RE::DoMatchImpl(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int, int*, int) const
#3  0x000055cf6758b43f pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
#4  0x000055cf663c9e53 mongo::RegexMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#5  0x000055cf663c9f37 mongo::InMatchExpression::matchesSingleElement(mongo::BSONElement const&, mongo::MatchDetails*) const
#6  0x000055cf65c46304 mongo::PathMatchExpression::matches(mongo::MatchableDocument const*, mongo::MatchDetails*) const
#7  0x000055cf65c33613 mongo::CollectionScan::returnIfMatches(mongo::WorkingSetMember*, unsigned long, unsigned long*)
#8  0x000055cf65c348ed mongo::CollectionScan::doWork(unsigned long*)
#9  0x000055cf65c35866 mongo::CountStage::doWork(unsigned long*)
#10 0x000055cf65cbdd27 mongo::PlanExecutorImpl::_getNextImpl(mongo::Snapshotted<mongo::Document>*, mongo::RecordId*)
#11 0x000055cf65cbeacb mongo::PlanExecutorImpl::getNextDocument(mongo::Document*, mongo::RecordId*)
#12 0x000055cf65cbec3d mongo::PlanExecutorImpl::_executePlan()
#13 0x000055cf65cbecc6 mongo::PlanExecutorImpl::executeCount()
#14 0x000055cf656eab78 mongo::(anonymous namespace)::CmdCount::run(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::BSONObjBuilder&)
#15 0x000055cf64ecd188 mongo::BasicCommand::runWithReplyBuilder(mongo::OperationContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mongo::BSONObj const&, mongo::rpc::ReplyBuilderInterface*)
#16 0x000055cf6635ca8e mongo::BasicCommandWithReplyBuilderInterface::Invocation::run(mongo::OperationContext*, mongo::rpc::ReplyBuilderInterface*)
#17 0x000055cf6635574f mongo::CommandHelpers::runCommandInvocation(mongo::OperationContext*, mongo::OpMsgRequest const&, mongo::CommandInvocation*, mongo::rpc::ReplyBuilderInterface*)
#18 0x000055cf6635a8be mongo::CommandHelpers::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>, mongo::transport::ServiceExecutor::ThreadingModel)
#19 0x000055cf64bf4907 mongo::(anonymous namespace)::runCommandInvocation(std::shared_ptr<mongo::RequestExecutionContext>, std::shared_ptr<mongo::CommandInvocation>)
#20 0x000055cf64c06f56 mongo::(anonymous namespace)::RunCommandImpl::_runCommand()
#21 0x000055cf64c07fbb mongo::(anonymous namespace)::RunCommandImpl::_runImpl()
#22 0x000055cf64bf8f4c mongo::(anonymous namespace)::RunCommandImpl::run()
#23 0x000055cf64bfb15e mongo::(anonymous namespace)::ExecCommandDatabase::_commandExec()
#24 0x000055cf64c03c00 mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}::operator()()
#25 0x000055cf64c05df0 mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#2}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#26 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#27 0x000055cf64c0a1a2 auto mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::generalImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::future_details::FakeVoid&&)#1}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda(mongo::Status&&)#2}&&, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::propagateResultTo(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*) &&::{lambda()#3}&&)
#28 0x000055cf64bfd5fc mongo::unique_function<void (mongo::future_details::SharedStateBase*)>::makeImpl<mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::makeContinuation<void, mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}>(mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&) &&::{lambda()#3}::operator()() const::{lambda(mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*, mongo::future_details::SharedStateImpl<mongo::future_details::FakeVoid>*)#1}&&)::{lambda(mongo::future_details::SharedStateBase*)#1}>(mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)::{lambda()#1}&&)::SpecificImpl::call(mongo::future_details::SharedStateBase*&&)
#29 0x000055cf64bc0967 mongo::future_details::SharedStateBase::transitionToFinished()
#30 0x000055cf64c045ea mongo::(anonymous namespace)::executeCommand(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#31 0x000055cf64c0501e mongo::(anonymous namespace)::receivedCommands(std::shared_ptr<mongo::(anonymous namespace)::HandleRequest::ExecutionContext>)
#32 0x000055cf64c05d36 mongo::(anonymous namespace)::CommandOpRunner::run()
#33 0x000055cf64bfffe7 mongo::ServiceEntryPointCommon::handleRequest(mongo::OperationContext*, mongo::Message const&, std::unique_ptr<mongo::ServiceEntryPointCommon::Hooks const, std::default_delete<mongo::ServiceEntryPointCommon::Hooks const> >)
#34 0x000055cf64befe4f mongo::ServiceEntryPointMongod::handleRequest(mongo::OperationContext*, mongo::Message const&)
#35 0x000055cf64c47097 mongo::transport::ServiceStateMachine::Impl::processMessage()
#36 0x000055cf64c473c7 mongo::future_details::FutureImpl<mongo::future_details::FakeVoid>::then<mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}>(mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)::{lambda()#2}&&) &&::{lambda(mongo::future_details::FakeVoid&&)#1}::operator()(mongo::future_details::FakeVoid&&) const [clone .isra.717]
#37 0x000055cf64c49d28 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#38 0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#39 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#40 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#41 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#42 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#43 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#44 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#45 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

38857
conn3376
S S S
0.0 0.0 0.0
Printing stacks of 38857

#0  0x00007f8394e819ef recvmsg
../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

#0  0x00007f8394e819ef recvmsg
../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

#0  0x00007f8394e819ef recvmsg
../sysdeps/unix/sysv/linux/recvmsg.c:27:10
#1  0x000055cf671df522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)
#2  0x000055cf671df5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)
#3  0x000055cf66d1e073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#4  0x000055cf66d2c1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)
#5  0x000055cf66d156b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)
#6  0x000055cf66d15a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()
#7  0x000055cf64c4800d mongo::transport::ServiceStateMachine::Impl::sourceMessage()
#8  0x000055cf64c49e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)
#9  0x000055cf64c4a22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#10 0x000055cf66ce59c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)
#11 0x000055cf65329ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()
#12 0x000055cf66ce5b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()
#13 0x000055cf66ce9a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()
#14 0x000055cf66ce9a9c mongo::(anonymous namespace)::runFunc(void*)
#15 0x00007f8394deeb43 start_thread
./nptl/pthread_create.c:442:8
#16 0x00007f8394e80a00 __clone3
../sysdeps/unix/sysv/linux/x86_64/clone3.S:81

