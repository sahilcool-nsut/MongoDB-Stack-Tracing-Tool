{
    "threads": {
        "24953": {
            "threadId": "24953",
            "iterations": [
                {
                    "iteration": 0,
                    "threadId": "24953",
                    "threadName": "conn739",
                    "threadCpu": 0.0,
                    "threadState": "S",
                    "threadStackTimeStamp": "584421",
                    "threadStack": "TID 24953:\n#0  0x00007f9feb53b9ef recvmsg\n#1  0x00005570f239a522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x00005570f239a5d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x00005570f1ed9073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x00005570f1ee71aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x00005570f1ed06b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x00005570f1ed0a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x00005570efe0300d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x00005570efe04e72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x00005570efe0522f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x00005570f1ea09c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x00005570f04e4ed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x00005570f1ea0b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x00005570f1ea4a2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x00005570f1ea4a9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007f9feb4a8b43 start_thread\n#16 0x00007f9feb53aa00 __clone3\n",
                    "analysis": {
                        "clientState": "Client may be waiting for Query to be given"
                    },
                    "currentOp": {}
                }
            ],
            "overallAnalysis": {
                "mergedStackAnalysis": {
                    "clientState": "Client seems to have no query running throughout all iterations"
                },
                "avgCpu": "0.00"
            }
        }
    },
    "success": "Success"
}