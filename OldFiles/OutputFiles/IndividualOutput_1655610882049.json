{
  "timeStamp": "1655610882049",
  "fullStack": "PID 4935 - process\nTID 4935:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f44146b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)\n#3  0x0000556f43f9b7a7 mongo::waitForShutdown()\n#4  0x0000556f416294e1 mongo::(anonymous namespace)::_initAndListen(mongo::ServiceContext*, int) [clone .isra.1896]\n#5  0x0000556f4162aeff mongo::mongod_main(int, char**)\n#6  0x0000556f414c5aae main\n#7  0x00007fb4a69cdd90 __libc_start_call_main\n    ../sysdeps/nptl/libc_start_call_main.h:58:16\n#8  0x00007fb4a69cde40 __libc_start_main@@GLIBC_2.34\n    ../csu/libc-start.c:392:3\n#9  0x0000556f416253fe _start\nTID 5445:\n#0  0x00007fb4a69e721a __sigtimedwait\n    ../sysdeps/unix/sysv/linux/sigtimedwait.c:61:28\n#1  0x0000556f422fc230 mongo::(anonymous namespace)::signalProcessingThread(mongo::LogFileStatus)\n#2  0x0000556f422fcce5 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (*)(mongo::LogFileStatus), mongo::LogFileStatus&, 0>(void (*)(mongo::LogFileStatus), mongo::LogFileStatus&)::{lambda()#1}> > >::_M_run()\n#3  0x0000556f4414a45f execute_native_thread_routine\n#4  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#5  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5446:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f44146b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)\n#3  0x0000556f43dfdcff std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1}, , 0>(mongo::BackgroundThreadClockSource::_startTimerThread()::{lambda()#1})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5447:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f44146b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)\n#3  0x0000556f43d63766 mongo::ThreadPool::Impl::_consumeTasks()\n#4  0x0000556f43d63ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n#5  0x0000556f43d643b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()\n#6  0x0000556f4414a45f execute_native_thread_routine\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5448:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5449:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5490:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f4174003b __tiered_server\n#4  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#5  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5539:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f41737f10 __log_file_server\n#4  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#5  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5540:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f417b7353 __wt_cond_auto_wait\n#5  0x0000556f41739883 __log_wrlsn_server\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5541:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f41738572 __log_server\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5542:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f417b7353 __wt_cond_auto_wait\n#5  0x0000556f4176430d __wt_evict_thread_run\n#6  0x0000556f417c8a49 __thread_run\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5543:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f417b7353 __wt_cond_auto_wait\n#5  0x0000556f4176430d __wt_evict_thread_run\n#6  0x0000556f417c8a49 __thread_run\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5544:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f417b7353 __wt_cond_auto_wait\n#5  0x0000556f4176430d __wt_evict_thread_run\n#6  0x0000556f417c8a49 __thread_run\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5545:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f417b72d5 __wt_cond_auto_wait_signal\n#4  0x0000556f417b7353 __wt_cond_auto_wait\n#5  0x0000556f4176430d __wt_evict_thread_run\n#6  0x0000556f417c8a49 __thread_run\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5546:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4178872a __wt_cond_wait_signal\n#3  0x0000556f4173dce2 __sweep_server\n#4  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#5  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5547:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f416ec77b mongo::WiredTigerKVEngine::WiredTigerSessionSweeper::run()\n#3  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#4  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5554:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5559:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f4262ddcf mongo::JournalFlusher::run()\n#3  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#4  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5560:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f425e9b6a mongo::Checkpointer::run()\n#3  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#4  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5561:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f42f1a3fc mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::deadlineMonitorThread()\n#3  0x0000556f42f16a91 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*, 0>(void (mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>::*)(), mongo::DeadlineMonitor<mongo::mozjs::MozJSImplScope>*&&)::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5590:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f41b1da54 mongo::FTDCController::doLoop()\n#3  0x0000556f41b1e17c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FTDCController::start()::{lambda()#2}, , 0>(mongo::FTDCController::start()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5603:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43c4cd2b asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)\n#3  0x0000556f43c4d195 asio::detail::scheduler::run(std::error_code&)\n#4  0x0000556f43c54d1e asio::io_context::run()\n#5  0x0000556f437689b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()\n#6  0x0000556f43735a77 mongo::executor::NetworkInterfaceTL::_run()\n#7  0x0000556f43735d66 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1}, , 0>(mongo::executor::NetworkInterfaceTL::startup()::{lambda()#1})::{lambda()#1}> > >::_M_run()\n#8  0x0000556f4414a45f execute_native_thread_routine\n#9  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#10 0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5606:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f44146b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)\n#3  0x0000556f43d63766 mongo::ThreadPool::Impl::_consumeTasks()\n#4  0x0000556f43d63ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n#5  0x0000556f43d643b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()\n#6  0x0000556f4414a45f execute_native_thread_routine\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5607:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f41af6e7a mongo::FreeMonMessageQueue::dequeue(mongo::ClockSource*)\n#3  0x0000556f41af37be mongo::FreeMonProcessor::run()\n#4  0x0000556f41afe6c3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1}, , 0>(mongo::FreeMonController::start(mongo::RegistrationType, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mongo::Duration<std::ratio<1l, 1l> >)::{lambda()#1})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5608:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f41a268aa mongo::TTLMonitor::run()\n#3  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#4  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5609:\n#0  0x00007fb4a6a89868 clock_nanosleep@GLIBC_2.2.5\n    ../sysdeps/unix/sysv/linux/clock_nanosleep.c:78:7\n#1  0x00007fb4a6a8e6e7 __nanosleep\n    ../sysdeps/unix/sysv/linux/nanosleep.c:25:13\n#2  0x0000556f43fbc287 mongo::sleepsecs(int)\n#3  0x0000556f4268ffc6 mongo::(anonymous namespace)::ClientCursorMonitor::run()\n#4  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#5  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#6  0x0000556f4414a45f execute_native_thread_routine\n#7  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#8  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5610:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43d5c7fa mongo::(anonymous namespace)::PeriodicTaskRunner::run()\n#3  0x0000556f43d5be96 mongo::BackgroundJob::jobBody()\n#4  0x0000556f43d5c36c std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::BackgroundJob::go()::{lambda()#2}, , 0>(mongo::BackgroundJob::go()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#5  0x0000556f4414a45f execute_native_thread_routine\n#6  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#7  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5611:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37ac1 pthread_cond_wait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f44146b5c std::condition_variable::wait(std::unique_lock<std::mutex>&)\n#3  0x0000556f429fc3b3 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1}, , 0>(mongo::SessionKiller::SessionKiller(mongo::ServiceContext*, std::function<mongo::StatusWith<std::vector<mongo::HostAndPort, std::allocator<mongo::HostAndPort> > > (mongo::OperationContext*, mongo::SessionKiller::Matcher const&, std::linear_congruential_engine<unsigned long, 48271ul, 0ul, 2147483647ul>*)>)::{lambda()#1})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5612:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5613:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5614:\n#0  0x00007fb4a6a35197 __GI___futex_abstimed_wait_cancelable64\n    ./nptl/futex-internal.c:57:12\n#1  0x00007fb4a6a37f1b pthread_cond_timedwait@@GLIBC_2.3.2\n    ./nptl/pthread_cond_wait.c:503:10\n#2  0x0000556f43dfea17 mongo::ClockSource::waitForConditionUntil(mongo::stdx::condition_variable&, mongo::BasicLockableAdapter, mongo::Date_t, mongo::Waitable*)\n#3  0x0000556f41e9b9d2 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2}, , 0>(mongo::PeriodicRunnerImpl::PeriodicJobImpl::_run()::{lambda()#2})::{lambda()#1}> > >::_M_run()\n#4  0x0000556f4414a45f execute_native_thread_routine\n#5  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#6  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5615:\n#0  0x00007fb4a6ac9fde epoll_wait\n    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10\n#1  0x0000556f43c4a22e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)\n#2  0x0000556f43c4cc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)\n#3  0x0000556f43c4d195 asio::detail::scheduler::run(std::error_code&)\n#4  0x0000556f43c54d1e asio::io_context::run()\n#5  0x0000556f437689b0 mongo::transport::TransportLayerASIO::ASIOReactor::run()\n#6  0x0000556f4374b88d mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}>(mongo::transport::ServiceExecutorFixed::start()::{lambda(mongo::Status)#2}&&)::SpecificImpl::call(mongo::Status&&)\n#7  0x0000556f43d613f5 mongo::ThreadPool::Impl::_doOneTask(std::unique_lock<mongo::latch_detail::Latch>*)\n#8  0x0000556f43d62a8b mongo::ThreadPool::Impl::_consumeTasks()\n#9  0x0000556f43d63ea1 mongo::ThreadPool::Impl::_workerThreadBody(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n#10 0x0000556f43d643b0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4}, , 0>(mongo::ThreadPool::Impl::_startWorkerThread_inlock()::{lambda()#4})::{lambda()#1}> > >::_M_run()\n#11 0x0000556f4414a45f execute_native_thread_routine\n#12 0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#13 0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 5616:\n#0  0x00007fb4a6ac9fde epoll_wait\n    ../sysdeps/unix/sysv/linux/epoll_wait.c:30:10\n#1  0x0000556f43c4a22e asio::detail::epoll_reactor::run(long, asio::detail::op_queue<asio::detail::scheduler_operation>&)\n#2  0x0000556f43c4cc0d asio::detail::scheduler::do_run_one(asio::detail::conditionally_enabled_mutex::scoped_lock&, asio::detail::scheduler_thread_info&, std::error_code const&)\n#3  0x0000556f43c4d195 asio::detail::scheduler::run(std::error_code&)\n#4  0x0000556f43c54d1e asio::io_context::run()\n#5  0x0000556f437670ec mongo::transport::TransportLayerASIO::_runListener()\n#6  0x0000556f437676cc std::thread::_State_impl<std::thread::_Invoker<std::tuple<mongo::stdx::thread::thread<mongo::transport::TransportLayerASIO::start()::{lambda()#1}, , 0>(mongo::transport::TransportLayerASIO::start()::{lambda()#1})::{lambda()#1}> > >::_M_run()\n#7  0x0000556f4414a45f execute_native_thread_routine\n#8  0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#9  0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 112297:\n#0  0x00007fb4a6acb9ef recvmsg\n    ../sysdeps/unix/sysv/linux/recvmsg.c:27:10\n#1  0x0000556f43c50522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x0000556f43c505d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x0000556f4378f073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x0000556f4379d1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x0000556f437866b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x0000556f43786a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x0000556f416b900d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000556f416bae72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x0000556f416bb22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x0000556f437569c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x0000556f41d9aed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x0000556f43756b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x0000556f4375aa2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x0000556f4375aa9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#16 0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\nTID 112416:\n#0  0x00007fb4a6acb9ef recvmsg\n    ../sysdeps/unix/sysv/linux/recvmsg.c:27:10\n#1  0x0000556f43c50522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x0000556f43c505d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x0000556f4378f073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x0000556f4379d1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x0000556f437866b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x0000556f43786a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x0000556f416b900d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000556f416bae72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x0000556f416bb22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x0000556f437569c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x0000556f41d9aed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x0000556f43756b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x0000556f4375aa2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x0000556f4375aa9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fb4a6a38b43 start_thread\n    ./nptl/pthread_create.c:442:8\n#16 0x00007fb4a6acaa00 __clone3\n    ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81)",
  "threads": [
    {
      "threadId": "112297",
      "threadName": "conn131",
      "threadState": "S",
      "threadCPU": "0.0",
      "threadStack": "#0  0x00007fb4a6acb9ef recvmsg\n../sysdeps/unix/sysv/linux/recvmsg.c:27:10\n#1  0x0000556f43c50522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x0000556f43c505d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x0000556f4378f073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x0000556f4379d1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x0000556f437866b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x0000556f43786a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x0000556f416b900d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000556f416bae72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x0000556f416bb22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x0000556f437569c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x0000556f41d9aed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x0000556f43756b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x0000556f4375aa2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x0000556f4375aa9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fb4a6a38b43 start_thread\n./nptl/pthread_create.c:442:8\n#16 0x00007fb4a6acaa00 __clone3\n../sysdeps/unix/sysv/linux/x86_64/clone3.S:81"
    },
    {
      "threadId": "112416",
      "threadName": "conn132",
      "threadState": "S",
      "threadCPU": "0.0",
      "threadStack": "#0  0x00007fb4a6acb9ef recvmsg\n../sysdeps/unix/sysv/linux/recvmsg.c:27:10\n#1  0x0000556f43c50522 asio::detail::socket_ops::recv(int, iovec*, unsigned long, int, std::error_code&)\n#2  0x0000556f43c505d8 asio::detail::socket_ops::sync_recv(int, unsigned char, iovec*, unsigned long, int, bool, std::error_code&)\n#3  0x0000556f4378f073 mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::opportunisticRead<asio::basic_stream_socket<asio::generic::stream_protocol>, asio::mutable_buffers_1>(asio::basic_stream_socket<asio::generic::stream_protocol>&, asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#4  0x0000556f4379d1aa mongo::Future<void> mongo::transport::TransportLayerASIO::ASIOSession::read<asio::mutable_buffers_1>(asio::mutable_buffers_1 const&, std::shared_ptr<mongo::Baton> const&)\n#5  0x0000556f437866b7 mongo::transport::TransportLayerASIO::ASIOSession::sourceMessageImpl(std::shared_ptr<mongo::Baton> const&)\n#6  0x0000556f43786a0a mongo::transport::TransportLayerASIO::ASIOSession::sourceMessage()\n#7  0x0000556f416b900d mongo::transport::ServiceStateMachine::Impl::sourceMessage()\n#8  0x0000556f416bae72 mongo::transport::ServiceStateMachine::Impl::startNewLoop(mongo::Status const&)\n#9  0x0000556f416bb22f mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceStateMachine::Impl::scheduleNewLoop(mongo::Status)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#10 0x0000556f437569c1 mongo::unique_function<void (mongo::Status)>::makeImpl<mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}>(mongo::transport::ServiceExecutorSynchronous::runOnDataAvailable(std::shared_ptr<mongo::transport::Session> const&, mongo::unique_function<void (mongo::Status)>)::{lambda(mongo::Status)#1}&&)::SpecificImpl::call(mongo::Status&&)\n#11 0x0000556f41d9aed3 mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}>(mongo::transport::ServiceExecutor::schedule(mongo::unique_function<void (mongo::Status)>)::{lambda()#1}&&)::SpecificImpl::call()\n#12 0x0000556f43756b7b mongo::unique_function<void ()>::makeImpl<mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}>(mongo::transport::ServiceExecutorSynchronous::scheduleTask(mongo::unique_function<void ()>, mongo::transport::ServiceExecutor::ScheduleFlags)::{lambda()#2}&&)::SpecificImpl::call()\n#13 0x0000556f4375aa2c mongo::unique_function<void ()>::makeImpl<mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}>(mongo::launchServiceWorkerThread(mongo::unique_function<void ()>)::{lambda()#4}&&)::SpecificImpl::call()\n#14 0x0000556f4375aa9c mongo::(anonymous namespace)::runFunc(void*)\n#15 0x00007fb4a6a38b43 start_thread\n./nptl/pthread_create.c:442:8\n#16 0x00007fb4a6acaa00 __clone3\n../sysdeps/unix/sysv/linux/x86_64/clone3.S:81"
    }
  ]
}
